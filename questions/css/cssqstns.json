[
  {
    "Id": "d6lpcss8cd",
    "question": "What is CSS?",
    "answer": "CSS stands for Cascading Style Sheets. CSS is used to define styles for web pages, including the design, layout and variations in display for different devices and screen sizes. CSS was intended to allow web professionals to separate the content and structure of a website's code from the visual design.\n\nCSS can be used for document text styling — for example changing the color and size of headings and links. It can be used to create layout — for example turning a single column of text into a layout with a main content area and a sidebar for related information. It can even be used for effects such as animation.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "Example",
        "code": "h1 {\n  color: red;\n  font-size: 5em;\n}\n\np {\n  color: black;\n}",
        "language": "css"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What is the use of css ruleset?",
    "answer": "CSS is a rule or set of rules that describe the formatting (change of appearance) of individual elements on a web page. The rule consists of two parts: the selector and the next declaration block.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "The image below shows the structure (syntax) of the rule:",
        "code": "div {\n  color: blue;\n  text-align: justify;\n}",
        "language": "css"
      }
    ],
    "bulletsTrue": true,
    "bullets": [
      "The first is always the selector, it tells the browser which element or elements of the web page will be styled.",
      "Next is the declaration block, which begins with the opening curly brace { and ends with the closing }, between the curly braces are specified formatting commands (declarations), which are used by the browser to stylize the selected selector element.",
      "Each declaration consists of two parts: the property and its value. The declaration must always end with a semicolon (;). You can omit the ; only at the end of the last declaration before the closing curly brace.",
      "A property is a formatting command that defines a specific style effect for an element. Each property has its own predefined set of values. After the property name, a colon is specified, which separates the property name from the valid value."
    ],
    "imageTrue": true,
    "images": [
      {
        "imageHead": "This Diagram explains the rule css applies.",
        "image": "https://rahulnk04.github.io/myapi-v1/questions/images/css-rule.png"
      }
    ],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the possible ways to apply CSS styles to a web page?",
    "answer": "There are three ways to apply CSS to HTML: Inline, internal, and external.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "Inline CSS is specified directly in the opening tag of the element you want it to apply to. It is entered into the style attribute within HTML. This allows CSS properties on a \"per tag\" basis.\n\nThis CSS type is not really recommended, as each HTML tag needs to be styled individually. However, inline CSS in HTML can be useful in some situations. For example, in cases where you don't have access to CSS files or need to apply styles for a single element only.",
        "code": "<p style=\"font-weight:bold;\">Bold Font</p>",
        "language": "css"
      },
      {
        "codeHead": "Internal or Embedded, styles are used for the whole page. Inside the head element, the style tags surround all of the styles for the page.\n\nThis CSS style is an effective method of styling a single page. However, using this style for multiple pages is time-consuming as you need to put CSS rules to every page of your website.",
        "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <title>Internal CSS Example</title>\n  <style>\n    p {\n        color: red;\n    }\n    \n    a {\n        color: blue;\n    }\n</style>\n...",
        "language": "markup"
      },
      {
        "codeHead": "Internal or Embedded, styles are used for the whole page. Inside the head element, the style tags surround all of the styles for the page.\n\nThis CSS style is an effective method of styling a single page. However, using this style for multiple pages is time-consuming as you need to put CSS rules to every page of your website.",
        "code": "/* style.css */\np {\n    color: red;\n}\n\na {\n    color: blue;\n}",
        "language": "css"
      },
      {
        "codeHead": "The link element in the example has three attributes. The first, rel, tells the browser the type of the target of the link. The second, type, tells the browser what type of stylesheet it is. And the third, href, tells the browser under which URL to find the stylesheet.",
        "code": "<!DOCTYPE html>\n<html>\n<head>\n    <title>External CSS Example</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n...",
        "language": "markup"
      }
    ],
    "bulletsTrue": true,
    "bullets": ["Inline CSS", "Internal CSS", "External CSS"],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "Explain new features in CSS3?",
    "answer": "Following are the features introduced in css3",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS3 Selectors",
        "code": "/* Matches any element E whose attribute attr starts with the value val. In other words, the val matches the beginning of the attribute value. */\nE[attr^=val]\n/* Example */\na[href^='http://sales.']\n{\n  color: teal;\n}\n\n/* Matches any element E whose attribute attr ends in val. In other words, the val matches the end of the attribute value. */\nE[attr$=val]\n/* Example */\na[href$='.jsp'] {\n  color: purple;\n}\n\n/* Matches any element E whose attribute attr matches val anywhere within the attribute. It is similar to E[attr~=val], except the val can be part of a word. */\nE[attr*=val]  \n/* Example */\nimg[src*='artwork'] {\n  border-color: #c3b087 #fff #fff #c3b087;\n}",
        "language": "css"
      },
      {
        "codeHead": "Pseudo-classes",
        "code": "/* CSS2 supports user interaction pseudo-classes, namely :link, :visited, :hover, :active, and :focus.\nA few more pseudo-class selectors were added in CSS3. One is the :root selector, which allows designers to point to the root element of a document. */\n\n:root {\n  overflow: auto;\n}\n/* As a complement to the :first-child selector, the :last-child was added. With it one can select the last element named of a parent element. */\n\ndiv.article > p:last-child {\n  font-style: italic;\n}\n/* A new user interaction pseudo-class selector was added, the :target selector. */\n\n/* \n<style>\n  span.notice:target { font-size: 2em; font-style: bold; }\n</style> \n*/\n\n/* \n    <a href='#section2'>Section 2</a>\n    <p id='section2'>...</p> \n*/\n/* The negation pseudo-class selector, :not can be coupled with almost any other selector that has been implemented. */\n\nimg:not([border]) {\n  border: 1;\n}",
        "language": "css"
      },
      {
        "codeHead": "CSS3 Colors",
        "code": "/* The color keyword list has been extended in the CSS3 color module to include 147 additional keyword colors (that are generally well supported), CSS3 also provides us with a number of other options: HSL, HSLA, RGBA and Opacity. */\n\ndiv.halfopaque {\n  background-color: rgb(0, 0, 0);\n  opacity: 0.5;\n  color: #000000;\n}\ndiv.halfalpha {\n  background-color: rgba(0, 0, 0, 0.5);\n  color: #000000;\n}",
        "language": "css"
      },
      {
        "codeHead": "Rounded Corners: border-radius",
        "code": "div {\n  border-radius: 25px;\n}",
        "language": "css"
      },
      {
        "codeHead": "Drop Shadows",
        "code": "div {\n  box-shadow: 2px 5px 0 0 rgba(72,72,72,1);\n}",
        "language": "css"
      },
      {
        "codeHead": "Text Shadow",
        "code": "div {\n  text-shadow: topOffset leftOffset blurRadius color;\n}",
        "language": "css"
      },
      {
        "codeHead": "Linear Gradients",
        "code": "/* Syntax: background: linear-gradient(direction, color-stop1, color-stop2, ...); */\n/* Example */   \n#grad {\n  background: linear-gradient(to right, red , yellow);\n}",
        "language": "css"
      },
      {
        "codeHead": "Radial Gradients",
        "code": "/* Syntax : background: radial-gradient(shape size at position, start-color, ..., last-color); */\n/* Example */\n#grad {\n  background: radial-gradient(red, yellow, green);\n} /* Default */\n#grad {\n  background: radial-gradient(circle, red, yellow, green);\n} /* Circle */",
        "language": "css"
      },
      {
        "codeHead": "Multiple Background Images",
        "code": "/* In CSS3, there's no need to include an element for every background image; it provides us with the ability to add more than one background image to any element, even to pseudo-elements. */\n\ndiv {\n  background-image: url(firstImage.jpg), \n                    url(secondImage.gif), \n                    url(thirdImage.png);\n}",
        "language": "css"
      }
    ],
    "bulletsTrue": true,
    "bullets": [
      "CSS3 Selectors",
      "Pseudo-classes",
      "CSS3 Colors",
      "Rounded Corners: border-radius",
      "Drop Shadows",
      "Text Shadow",
      "Linear Gradients",
      "Radial Gradients",
      "Multiple Background Images"
    ],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css selectors?",
    "answer": "A CSS selector is the part of a CSS rule set that actually selects the content you want to style.",
    "codeTrue": false,
    "codes": [
      {
        "codeHead": "",
        "code": "",
        "language": "css"
      }
    ],
    "bulletsTrue": true,
    "bullets": [
      "Universal Selector",
      "Element Type Selector",
      "ID Selector",
      "Class Selector",
      "Descendant Combinator",
      "Child Combinator",
      "General Sibling Combinator",
      "Adjacent Sibling Combinator",
      "Attribute Selector",
      "Pseudo-class",
      "Pseudo-element"
    ],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Universal Selector?",
    "answer": "The universal selector works like a wild card character, selecting all elements on a page. Every HTML page is built on content placed within HTML tags. Each set of tags represents an element on the page.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "Example",
        "code": "* {\n   color: green;\n   font-size: 20px;\n   line-height: 25px;\n}",
        "language": "css"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Element Type Selector?",
    "answer": "This selector match one or more HTML elements of the same name.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "ul {\n  list-style: none;\n  border: solid 1px #ccc;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<ul>\n  <li>Fish</li>\n  <li>Apples</li>\n  <li>Cheese</li>\n</ul>\n\n<div class=\"example\">\n  <p>Example paragraph text.</p>\n</div>\n\n<ul>\n  <li>Water</li>\n  <li>Juice</li>\n  <li>Maple Syrup</li>\n</ul>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css ID Selector?",
    "answer": "This selector matches any HTML element that has an ID attribute with the same value as that of the selector.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "#container {\n   width: 960px;\n   margin: 0 auto;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <div id=\"container\"></div>\n  </body>\n</html>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Class Selector?",
    "answer": "The class selector also matches all elements on the page that have their class attribute set to the same value as the class.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": ".box {\n  padding: 20px;\n  margin: 10px;\n  width: 240px;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <div class=\"box\"></div>\n  </body>\n</html>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Descendant Combinator?",
    "answer": "The descendant selector or, more accurately, the descendant combinator lets you combine two or more selectors so you can be more specific in your selection method.\n\nThis declaration block will apply to all elements that have a class of box that are inside an element with an ID of container. It’s worth noting that the .box element doesn’t have to be an immediate child: there could be another element wrapping .box, and the styles would still apply.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "#container .box {\n  float: left;\n  padding-bottom: 15px;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <div id=\"container\">\n      <div class=\"box\"></div>\n      <div class=\"box-2\"></div>\n    </div>\n    <div class=\"box\"></div>\n  </body>\n</html>\n",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Child Combinator?",
    "answer": "A selector that uses the child combinator is similar to a selector that uses a descendant combinator, except it only targets immediate child elements.\n\nThe selector will match all elements that have a class of box and that are immediate children of the #container element. That means, unlike the descendant combinator, there can’t be another element wrapping .box—it has to be a direct child element.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "#container > .box {\n  float: left;\n  padding-bottom: 15px;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <div id=\"container\">\n      <div class=\"box\"></div>\n      <div>\n        <div class=\"box\"></div>\n      </div>\n    </div>\n  </body>\n</html>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Pseudo-class?",
    "answer": "A pseudo-class uses a colon character to identify a pseudo-state that an element might be in—for example, the state of being hovered, or the state of being activated.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "a:hover {\n  color: red;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <a href=\"#\">My Anchor</a>\n  </body>\n</html>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What are the css Pseudo-element?",
    "answer": "A CSS pseudo-element is used to style specified parts of an element. For example, it can be used to:",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      p::first-line {\n        color: #ff0000;\n        font-variant: small-caps;\n      }\n\n      p::first-letter {\n        color: #ff0000;\n        font-size: xx-large;\n      }\n\n      h1::before {\n        content: url(smiley.gif);\n      }\n\n      h1::after {\n        content: url(smiley.gif);\n      }\n\n      ::selection {\n        color: red;\n        background: yellow;\n      }\n    </style>\n  </head>\n<body>\n  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n  Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n  <h1>when an unknown printer took a galley of type and scrambled it to make a\n  type specimen book.<h1></p>\n</body>\n</html>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [
      "Style the first letter, or line, of an element",
      "Insert content before, or after, the content of an element"
    ],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What is contextual selector?",
    "answer": "Contextual selector addresses specific occurrence of an element. It is a string of individual selectors separated by white space (search pattern), where only the last element in the pattern is addressed providing it matches the specified contex.\n\nIt also check the context of the class in the html tree, assigning the style to the element through a specific route, taking into account the order of depth in the tree.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "table p { property: value; } ",
        "language": "css"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  },
  {
    "Id": "d6lpcss8cd",
    "question": "What is the difference between class selectors and id selectors?",
    "answer": "In the CSS, a class selector is a name preceded by a full stop (“.”) and an ID selector is a name preceded by a hash character (“#”). The difference between an ID and a class is that an ID can be used to identify one element, whereas a class can be used to identify more than one.",
    "codeTrue": true,
    "codes": [
      {
        "codeHead": "CSS FILE",
        "code": "#top {\n  background-color: #ccc;\n  padding: 20px;\n}\n\n.intro {\n  color: red;\n  font-weight: bold;\n}",
        "language": "css"
      },
      {
        "codeHead": "HTML FILE",
        "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Document</title>\n  </head>\n  <body>\n    <div id=\"top\">\n      <h1>Chocolate curry</h1>\n      <p class=\"intro\">\n        This is my recipe for making curry purely with chocolate\n      </p>\n      <p class=\"intro\">Mmm mm mmmmm</p>\n    </div>\n  </body>\n</html>",
        "language": "markup"
      }
    ],
    "bulletsTrue": false,
    "bullets": [],
    "imageTrue": false,
    "images": [{ "imageHead": "", "image": "" }],
    "hasTable": false,
    "table": { "tableHead": [{ "path": "", "name": "" }], "tableBody": [{}] }
  }
]
